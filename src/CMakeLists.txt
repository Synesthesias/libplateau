add_compile_definitions(LIBPLATEAU_BUILD)

if(BUILD_LIB_TYPE STREQUAL "dynamic")
  add_compile_definitions(LIBPLATEAU_BUILD_DYNAMIC)
  add_library(plateau SHARED "")
else()
  add_library(plateau STATIC "")
endif()

if( NOT(IOS OR ANDROID) )
  target_link_libraries(plateau PUBLIC
          citygml xerces-c GLTFSDK crypto ssl "${FBXSDK_LIBRARIES}" LibXml2 "${ZLIB_LIBRARY}" c_wrapper
          )
  target_include_directories(plateau PUBLIC "${CMAKE_SOURCE_DIR}/include" "${LIBCITYGML_INCLUDE}" "${GLTFSDK_INCLUDE}" "${CPPHTTPLIB_INCLUDE}" "${FBXSDK_INCLUDE}")
else()
  target_link_libraries(plateau PUBLIC 
    "citygml" 
    "GLTFSDK" 
    "crypto" 
    "ssl" 
    "c_wrapper"
    "${OPENGL_LIBRARIES}"
  )
  set_target_properties(plateau PROPERTIES 
    FRAMEWORK TRUE
    MACOSX_FRAMEWORK_IDENTIFIER jp.synesthesias.libplateau
  )
  target_include_directories(plateau PUBLIC "${CMAKE_SOURCE_DIR}/include" "${LIBCITYGML_INCLUDE}" "${GLTFSDK_INCLUDE}" "${CPPHTTPLIB_INCLUDE}")
endif()

set_target_properties(plateau PROPERTIES RUNTIME_OUTPUT_DIRECTORY
  ${LIBPLATEAU_BINARY_DIR})

add_subdirectory(io)
add_subdirectory(mesh_writer)
add_subdirectory(polygon_mesh)
add_subdirectory(geometry)
add_subdirectory(basemap)
add_subdirectory(c_wrapper)
add_subdirectory(dataset)
add_subdirectory(network)
