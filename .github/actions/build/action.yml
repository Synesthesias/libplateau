
# libplateau を github actions でビルドする共通アクションです。

inputs:
  shell_type:
    description: "利用するシェルを引数で渡します。"
    required: true

runs:
  using: Composite

  steps:
    - name: Update Submodules
      run: git submodule update --init --recursive
      shell: ${{ inputs.shell_type }}

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3

      # Ubuntuでビルドを通すには OpenGL API のインストールが必要です。
    - name: Install OpenGL API on Ubuntu machine
      if: runner.os == 'Linux'
      run: sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev
      shell: ${{ inputs.shell_type }}


      # Windowsのみ
    - name: Setup MSVC for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

      # Linuxでgccのバージョンを指定します。
      # Ubuntu 18 だとデフォルトでは gcc-7 になりますが、
      # std::filesystem を使うために gcc-8 以上にする必要があります。
#    - name: Specify gcc version for Linux
#      if: runner.os == 'Linux'
#      run: |
#        export CC="/usr/bin/gcc-9"
#        export CXX="/usr/bin/g++-9"
#      shell: ${{ inputs.shell_type }}


    - name: Configure CMake for Windows
      if: runner.os == 'Windows'
      run: >
        cmake
        -S ${{github.workspace}} 
        -B ${{github.workspace}}/out/build/x64-Release 
        -G "Ninja" 
        -D CMAKE_BUILD_TYPE:STRING="${{env.BUILDTYPE}}" 
        -D CMAKE_CXX_FLAGS="-w"
      shell: ${{ inputs.shell_type }}
    # 10万行超えの警告が出るので一時的な処置として警告を抑制しています。

    - name: Configure CMake for Non Windows
      if: runner.os != 'Windows'
      run: >
        cmake
        -S ${{github.workspace}} 
        -B ${{github.workspace}}/out/build/x64-Release 
        -G "Ninja" 
        -D CMAKE_BUILD_TYPE:STRING="${{env.BUILDTYPE}}" 
        -D CMAKE_CXX_FLAGS="-w"
        -D CMAKE_CXX_COMPILER="/usr/bin/g++-9"
      shell: ${{ inputs.shell_type }}
    # Ubuntu 18 だとデフォルトでは g++-7 になりますが、std::filesystem を使う都合上 g++-9 を指定します。



    - name: Build by CMake
      run: cmake --build ${{github.workspace}}/out/build/x64-Release --config ${{env.BUILD_TYPE}}
      shell: ${{ inputs.shell_type }}


    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x


    # TODO Platform="Any CPU" としているのはあくまで仮です。
    # どの値に設定すべきか要検討です。
    - name: Build C# Wrapper
      run: dotnet build -p:Configuration=Release -p:Platform="Any CPU" ${{github.workspace}}/wrappers/csharp/LibPLATEAU.NET
      shell: ${{ inputs.shell_type }}